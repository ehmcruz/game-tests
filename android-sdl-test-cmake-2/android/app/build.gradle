apply plugin: 'com.android.application'
//apply plugin: 'com.android.library'

android {
	namespace "org.libsdl.app"
/*
	sourceSets {
		//noinspection GroovyAssignabilityCheck
		main {
			jni {
				srcDirs = []
			}
			jniLibs {
				srcDir '/home/ehmcruz/Android/SDL/lib'
			}
		}
	}
*/
	compileSdkVersion 34
	defaultConfig {
		minSdkVersion 33
		targetSdkVersion 33
		versionCode 1
		versionName "1.0"
		externalNativeBuild {
			ndkBuild {
				arguments "APP_PLATFORM=android-33"
				//abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
				abiFilters 'arm64-v8a'
			}
			 cmake {
			//	 arguments "-DANDROID_APP_PLATFORM=android-19", "-DANDROID_STL=c++_static"
			//	 // abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
				 abiFilters 'arm64-v8a'
			 }
		}
	}
	ndkVersion '26.1.10909125'
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	applicationVariants.all { variant ->
		tasks["merge${variant.name.capitalize()}Assets"]
			.dependsOn("externalNativeBuild${variant.name.capitalize()}")
	}
/*	sourceSets.main {
		jniLibs.srcDir 'libs'
	}*/
	externalNativeBuild {
/*		ndkBuild {
			path 'cpp/Android.mk'
		} */
		cmake {
			path '../../CMakeLists.txt'
			version "3.22.1"
		}
	}
	lint {
		abortOnError false
	}
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
}
